<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Embedded Stuff - Linux</title><link href="https://marek-gaw.github.io/" rel="alternate"></link><link href="https://marek-gaw.github.io/feeds/linux.atom.xml" rel="self"></link><id>https://marek-gaw.github.io/</id><updated>2015-11-18T07:20:02-01:00</updated><subtitle>Embedded, Linux, Cloud, IoT, Automation</subtitle><entry><title>Loadable kernel modules and Raspberry Pi</title><link href="https://marek-gaw.github.io/blog/2015/11/loadable-kernel-modules-and-raspberry-pi.html" rel="alternate"></link><published>2015-11-18T07:20:02-01:00</published><updated>2015-11-18T07:20:02-01:00</updated><author><name>Marek Gawryszewski</name></author><id>tag:marek-gaw.github.io,2015-11-18:/blog/2015/11/loadable-kernel-modules-and-raspberry-pi.html</id><summary type="html">&lt;p&gt;Recently, I have been playing with Raspberry Pi. My goal was to blink with LED - seems so simple, right? To make it a little harder, I choose to make it via loadable kernel module.&lt;/p&gt;
&lt;p&gt;First problem that I had encounter was difference between version of kernel sources, that are available â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I have been playing with Raspberry Pi. My goal was to blink with LED - seems so simple, right? To make it a little harder, I choose to make it via loadable kernel module.&lt;/p&gt;
&lt;p&gt;First problem that I had encounter was difference between version of kernel sources, that are available at GitHub (&lt;a class="reference external" href="https://github.com/raspberrypi/linux"&gt;https://github.com/raspberrypi/linux&lt;/a&gt;) and kernel version available in Raspbian Jessie (for Nov 2015 it is 4.1.12 vs 4.1.7+). Difference looks small but in fact makes simplest possible modules not working at all.&lt;/p&gt;
&lt;p&gt;Finally, I made it work. The key was post, found on the Internet with step-by-step instruction, how to make Raspian Jessie work with current kernel sources. Post: &lt;a class="reference external" href="https://sites.google.com/site/thepihacker/pimodules"&gt;https://sites.google.com/site/thepihacker/pimodules&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time cross compilation was not a problem. Because I had been using Ubunutu 64bit, I chose to use official toolchain, made by Linaro (available at Gitub: &lt;a class="reference external" href="https://github.com/raspberrypi/tools"&gt;https://github.com/raspberrypi/tools&lt;/a&gt;). Fortunately, version of cross compiler matched version of compiler used to build kernel in Raspbian (this version checking is also a part of the process of preparation described in post, mentioned above).
It seems that making simple loadable kernel module was not as hard as environment setup, which is quite supprising to me. Anyway, now I am able do blink LED diode with kernel module.&lt;/p&gt;
</content><category term="Linux"></category><category term="Raspberry Pi"></category><category term="Kernel"></category><category term="Kernel drivers"></category></entry></feed>